

@article{Poli12a,
	Abstract = {Bootstrapping is a technique commonly known by its usage in language definition by the introduction of a compiler
written in the same language it compiles. This process is important to understand and modify the definition of a given
language using the same language, taking benefit of the abstractions and expression power it provides. A bootstrap,
then, supports the evolution of a language. However, the infrastructure of reflective systems like Smalltalk includes,
in addition to a compiler, an environment with several self-references. A reflective system bootstrap should consider
all its infrastructural components. In this paper, we propose a definition of bootstrap for object-oriented reflective
systems, we describe the architecture and components it should contain and we analyze the challenges it has to
overcome. Finally, we present a reference bootstrap process for a reflective system and Hazelnut, its implementation
for bootstrapping the Pharo Smalltalk-inspired system.},
	Journal = {Journal on Science of Computer Programming - Special Issue: Smalltalk Based Systems},
	Author = {Guillermo Polito and St\'ephane Ducasse and Luc Fabresse and Noury Bouraqadi and Benjamin Van Ryseghem},
	Inria = {RMOD},
	Keywords = {Object-Oriented Programming and Design, Bootstrap, Smalltalk, Software Evolution},
	Description = {Under publication},
	Title = {Bootstrapping Reflective Systems: The Case of Pharo},
	Year = {2012, under submission}
	}


